trigger:
- main

pool:
  name: 'COMP367-Windows'

variables:
  buildConfiguration: 'Release'
  Major: '1'
  Minor: '0'
  Patch: '$(Build.BuildId)'  # Automatically use build ID to avoid duplicates
  PackageVersion: '$(Major).$(Minor).$(Patch)'
  dotNetVersion: '8.0.x'
  projectPath: 'StringExtensions/StringExtensions.csproj'

steps:

- script: |
    echo "Checking for existing .NET SDK..."
    where dotnet
    if %ERRORLEVEL% NEQ 0 (
      echo ".NET SDK not found, installing..."
      curl -L https://aka.ms/dotnet/8.0/dotnet-sdk-win-x64.exe -o dotnet-installer.exe
      dotnet-installer.exe /install /quiet /norestart
    ) else (
      echo ".NET SDK already installed, checking version..."
      dotnet --list-sdks
    )
  displayName: 'Check and Install .NET 8 SDK if needed'
  failOnStderr: false

- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: 'restore'
    projects: '$(projectPath)'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: '$(projectPath)'
    arguments: '--configuration $(buildConfiguration)'

# Clean old artifacts before pack
- script: |
    echo "Cleaning artifact staging directory..."
    rd /s /q "$(Build.ArtifactStagingDirectory)"
  displayName: 'Clean artifact staging directory'

- task: DotNetCoreCLI@2
  displayName: 'Pack'
  inputs:
    command: 'pack'
    packagesToPack: '$(projectPath)'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'PackageVersion'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    nobuild: true

- task: NuGetAuthenticate@1
  displayName: 'Authenticate with Azure Artifacts'

# Debug: List files in staging
- script: |
    echo "Listing files in staging directory:"
    dir $(Build.ArtifactStagingDirectory)
  displayName: 'Check staged files before push'

# FIXED push using NuGetCommand instead of DotNetCoreCLI
- task: NuGetCommand@2
  displayName: 'Push to Feed (NuGetCommand)'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
    publishVstsFeed: 'StringExtensions-AzureDevOps/YogenLab4Feed'
    allowPackageConflicts: true
    arguments: '--skip-duplicate'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
